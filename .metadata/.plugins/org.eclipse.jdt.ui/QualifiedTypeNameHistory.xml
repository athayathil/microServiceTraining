<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="scala.annotation.meta.setter"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
<fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
<fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
<fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.PathSelectors"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.ApiInfoBuilder"/>
<fullyQualifiedTypeName name="springfox.documentation.service.ApiInfo"/>
<fullyQualifiedTypeName name="com.myapp.cloud.repository.OrderRepository"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.feign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.myapp.cloud.api.client.OrderClient"/>
<fullyQualifiedTypeName name="com.myapp.cloud.service.OrderService"/>
<fullyQualifiedTypeName name="com.myapp.cloud.model.Order"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.feign.EnableFeignClients"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.hibernate.jpamodelgen.xml.jaxb.TemporalType"/>
<fullyQualifiedTypeName name="javax.persistence.TemporalType"/>
<fullyQualifiedTypeName name="javax.persistence.Temporal"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="jnr.ffi.types.sa_family_t"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"/>
<fullyQualifiedTypeName name="org.springframework.messaging.SubscribableChannel"/>
<fullyQualifiedTypeName name="org.springframework.cloud.stream.annotation.Input"/>
<fullyQualifiedTypeName name="com.myapp.cloud.repository.PaymentRepository"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.myapp.cloud.model.Payment"/>
<fullyQualifiedTypeName name="org.springframework.cloud.stream.annotation.StreamListener"/>
<fullyQualifiedTypeName name="javax.transaction.Transactional"/>
<fullyQualifiedTypeName name="com.atomikos.icatch.Propagation"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Propagation"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.stream.annotation.EnableBinding"/>
<fullyQualifiedTypeName name="com.myapp.cloud.messaging.PaymentSink"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="zipkin.server.EnableZipkinServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.client.EnableOAuth2Sso"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableOAuth2Client"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.resource.OAuth2ProtectedResourceDetails"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2ClientContext"/>
</qualifiedTypeNameHistroy>
